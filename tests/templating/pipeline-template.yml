#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("common.lib.yml", "component_triggers")

---
jobs:
# lock pipeline till completed running
# prevents starting multiple concurent runs
- name: set-lock
  plan: 
  #@ for comp in data.values.components:
  - get: #@ comp.name
    trigger: true
    version: #@ "((resource_version_{}))".format(comp.name)
  #@ end
  - put: env-pipeline-lock
    resource: pipeline-locks
    params: {claim: env-pipeline}

# do env component jobs
#@ for comp in data.values.components:
- name: #@ "build-{}".format(comp.name)
  plan:
  - get: #@ comp.name
    version: #@ "((resource_version_{}))".format(comp.name)
    trigger: true
    passed: [set-lock]
  - task: #@ "build-{}".format(comp.name)
    file: #@ comp.file
#@ end

# release the lock on this pipeline
- name: release-lock
  plan:
  - get: ((environment.name))-state
    passed: [set-versions]
  - put: pipeline-locks
    params: {release: env-pipeline-lock}

resources:
- name: pipeline-locks
  type: pool
  source:
    uri: git@github.com:rbogle/concourse-locks.git
    branch: main
    pool: ((environment.name))
    private_key: ((git_key))]

# where we will set our state
- name: ((environment.name))-state
  type: git
  icon: github
  source:
    uri: ((environment.state_repo))
    branch: ((environment.state_branch))

#@ for comp in data.values.components:
- name: #@ comp.name
  type: git
  icon: github
  source:
    uri: #@ comp.repo
    branch: #@ comp.branch
#@ end